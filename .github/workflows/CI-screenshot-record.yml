name: "ðŸ“· Screenshot Tests / ðŸ“¸ Record"

on:
  workflow_call:
    inputs: 

      ref:
        description: "The base branch to compare against."
        type: string
        required: false
        default: "main"

      golden_artifact:
        description: "The name of the artifact containing the golden values for all modules."
        type: string
        required: false
        default: 'Screenshot Golden Values'

jobs:

  record:
    name: "ðŸ“¸ Record"
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:

      - name: "Set up JDK 17."
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: "Set up Android SDK."
        uses: android-actions/setup-android@v3
        with:
          log-accepted-android-sdk-licenses: false

      - name: "Set up Android SDK components."
        run: |
          # Install Android API used to build the project.
          echo sdkmanager --install "platforms;android-34"
          sdkmanager --install "platforms;android-34"

      - name: "Checkout ${{ inputs.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v4
        with:
          ref: ${{ format('refs/heads/{0}', inputs.ref) }}

      - name: "Record screenshots golden values for ${{ inputs.ref }}."
        id: gradle
        run: >
          ./gradlew
          --no-daemon
          --no-build-cache
          --stacktrace
          --continue
          --scan
          recordPaparazziDebug
          -Pnet.twisterrob.build.screenshot-tests=true

      - name: "Publish 'Gradle' commit status (with Build Scan URL)."
        if: (success() || failure()) && steps.gradle != null && steps.gradle.outputs.result-success != null
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: ${{ toJSON(fromJSON(steps.gradle.outputs.result-success)) }} === true ? "success" : "failure",
              context: "CI / Screenshot Tests / Record / Gradle",
              description: ${{ toJSON(fromJSON(steps.gradle.outputs.result-text)) }},
              target_url: ${{ toJSON(fromJSON(steps.gradle.outputs.build-scan-url)) }}
            });

      - name: "Upload '${{ inputs.golden_artifact }}' artifact."
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: '${{ inputs.golden_artifact }}'
          path: |
            ${{ github.workspace }}/**/src/test/snapshots/images/*.png

      - name: "Upload 'Screenshot Record Results' artifact."
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: 'Screenshot Record Results'
          path: |
            ${{ github.workspace }}/**/build/reports/tests/*/
            ${{ github.workspace }}/**/build/reports/paparazzi/
            ${{ github.workspace }}/**/build/test-results/*/TEST-*.xml

      - name: "Publish 'ðŸ”” Test: Screenshot Record Results' check suite."
        if: success() || failure()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: "ðŸ”” Test: Screenshot Record Results"
          comment_mode: off
          report_individual_runs: true
          test_changes_limit: 0
          junit_files: ${{ github.workspace }}/**/build/test-results/*/TEST-*.xml
