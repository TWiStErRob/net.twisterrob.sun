name: "ðŸ”¨ Build & Verify"

on:
  workflow_call

jobs:

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:

      - name: "Set up JDK 17."
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: "Set up Android SDK."
        uses: android-actions/setup-android@v3
        with:
          log-accepted-android-sdk-licenses: false

      - name: "Set up Android SDK components."
        run: |
          # Install Android API used to build the project.
          echo sdkmanager --install "platforms;android-34"
          sdkmanager --install "platforms;android-34"

      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v4

      - name: "Register problem matchers."
        run: echo "::add-matcher::.github/problemMatchers.json"

      - name: "Build & Verify project using Gradle."
        id: gradle
        run: >
          ./gradlew
          --no-daemon
          --no-build-cache
          --stacktrace
          --continue
          --scan
          assemble
          check
          detekt
          detektMain
          detektTest
          detektReportMergeSarif
          detektReportMergeXml
          lintReportMergeSarif
          violationReportHtml

      - name: "Publish 'Gradle' commit status (with Build Scan URL)."
        if: (success() || failure()) && steps.gradle != null && steps.gradle.outputs.result-success != null
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: ${{ toJSON(fromJSON(steps.gradle.outputs.result-success)) }} === true ? "success" : "failure",
              context: "CI / Build & Verify / Gradle",
              description: ${{ toJSON(fromJSON(steps.gradle.outputs.result-text)) }},
              target_url: ${{ toJSON(fromJSON(steps.gradle.outputs.build-scan-url)) }}
            });

      - name: "Upload 'Lint Results' artifact."
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: Lint Results
          path: |
            ${{ github.workspace }}/**/build/reports/lint-results*.*
            ${{ github.workspace }}/build/reports/lint/merge-*.*
            ${{ github.workspace }}/build/reports/violations.*

      - name: "Publish 'Android Lint' GitHub Code Scanning analysis."
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          # merge-debug.sarif and merge-release.sarif in the folder.
          sarif_file: ${{ github.workspace }}/build/reports/lint/

      - name: "Upload 'Unit Test Results' artifact."
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: 'Unit Test Results'
          path: ${{ github.workspace }}/**/build/reports/tests/*/

      - name: "Publish 'ðŸ”” Test: Unit Results' check suite."
        if: success() || failure()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: 'ðŸ”” Test: Unit Results'
          comment_mode: off
          report_individual_runs: true
          test_changes_limit: 0
          junit_files: ${{ github.workspace }}/**/build/test-results/*/TEST-*.xml

      - name: "Upload 'Detekt Results' artifact."
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: 'Detekt Results'
          path: |
            ${{ github.workspace }}/**/build/reports/detekt/detekt.*
            ${{ github.workspace }}/build/reports/detekt/merge.*

      - name: "Publish 'detekt' GitHub Code Scanning analysis."
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ github.workspace }}/build/reports/detekt/merge.sarif
