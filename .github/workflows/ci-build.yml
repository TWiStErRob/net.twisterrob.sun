name: "ðŸ”¨ Build & Verify"

on:
  workflow_call

jobs:

  build:
    name: "build"
    timeout-minutes: 15

    permissions:
      # actions/checkout
      contents: read
      # createCommitStatus
      statuses: write
      # EnricoMi/publish-unit-test-result-action
      checks: write
      # github/codeql-action/upload-sarif
      security-events: write
      # github/codeql-action/upload-sarif in private repositories / internal organizations.
      actions: read

    defaults:
      run:
        shell: bash

    runs-on: ubuntu-24.04
    steps:

      - name: "Set up JDK for Android SDK."
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: "Set up Android SDK."
        uses: android-actions/setup-android@v3
        with:
          log-accepted-android-sdk-licenses: false

      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v4

      - name: "Set up JDK for Project."
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version-file: .java-version

      - name: "Register problem matchers."
        run: echo "::add-matcher::.github/problemMatchers.json"

      - name: "Set up Gradle."
        uses: gradle/actions/setup-gradle@v4

      - name: "Build & Verify project using Gradle."
        id: gradle
        run: >
          ./gradlew
          --no-daemon
          --no-build-cache
          --stacktrace
          --continue
          --scan
          assemble
          check
          detekt
          detektMain
          detektTest
          detektReportMergeSarif
          detektReportMergeXml
          lintReportMergeSarif
          violationReportHtml

      - name: "Publish 'Gradle' commit status (with Build Scan URL)."
        if: ${{ (success() || failure()) && steps.gradle != null && steps.gradle.outputs.result-success != null }}
        env:
          RESULT_SUCCESS: ${{ steps.gradle.outputs.result-success }}
          RESULT_TEXT: ${{ steps.gradle.outputs.result-text }}
          BUILD_SCAN_URL: ${{ steps.gradle.outputs.build-scan-url }}
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: process.env.RESULT_SUCCESS === 'true' ? "success" : "failure",
              context: "CI / Build & Verify / Gradle",
              description: process.env.RESULT_TEXT,
              target_url: process.env.BUILD_SCAN_URL,
            });

      - name: "Upload 'Lint Results' artifact."
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: Lint Results
          if-no-files-found: error
          path: |
            ${{ github.workspace }}/**/build/reports/lint-results*.*
            ${{ github.workspace }}/build/reports/lint/merge-*.*
            ${{ github.workspace }}/build/reports/violations.*

      - name: "Publish 'Android Lint' GitHub Code Scanning analysis."
        uses: github/codeql-action/upload-sarif@v3
        if: ${{ success() || failure() }}
        with:
          category: ${{ github.job }}-debug
          sarif_file: ${{ github.workspace }}/build/reports/lint/merge-debug.sarif

      - name: "Publish 'Android Lint' GitHub Code Scanning analysis."
        uses: github/codeql-action/upload-sarif@v3
        if: ${{ success() || failure() }}
        with:
          category: ${{ github.job }}-release
          sarif_file: ${{ github.workspace }}/build/reports/lint/merge-release.sarif

      - name: "Upload 'Unit Test Results' artifact."
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Unit Test Results'
          if-no-files-found: error
          path: ${{ github.workspace }}/**/build/reports/tests/*/

      - name: "Publish 'ðŸ”” Test: Unit Results' check suite."
        if: ${{ success() || failure() }}
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: 'ðŸ”” Test: Unit Results'
          comment_mode: off
          report_individual_runs: true
          action_fail_on_inconclusive: true
          test_changes_limit: 0
          files: ${{ github.workspace }}/**/build/test-results/*/TEST-*.xml

      - name: "Upload 'Detekt Results' artifact."
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Detekt Results'
          if-no-files-found: error
          path: |
            ${{ github.workspace }}/**/build/reports/detekt/detekt.*
            ${{ github.workspace }}/build/reports/detekt/merge.*

      - name: "Publish 'detekt' GitHub Code Scanning analysis."
        uses: github/codeql-action/upload-sarif@v3
        if: ${{ success() || failure() }}
        with:
          sarif_file: ${{ github.workspace }}/build/reports/detekt/merge.sarif
